---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &n isp
  namespace: proxy
spec:
  chart:
    spec:
      chart: nginx
      version: 18.1.11
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  interval: 1h
  timeout: 2m
  releaseName: *n
  values:
    fullnameOverride: *n
    podLabels:
      egress.home.arpa/isp-router: allow
      traefik.home.arpa/ingress: allow
    containerPorts:
      http: 8080
      https: 8443
    autoscaling:
      enabled: false
      minReplicas: ''
      maxReplicas: ''
      targetCPU: ''
      targetMemory: ''
      extraVolumeMounts: []

    # @param serverBlock Custom server block to be added to NGINX configuration
    # PHP-FPM example server block:
    serverBlock: |-
      server {
        # server_name isp.${EXTERNAL_DOMAIN};
        listen 0.0.0.0:8443 ssl;
        ssl_certificate /certs/server.crt;
        ssl_certificate_key /certs/server.key;
        root /;
        location / {
          proxy_pass https://${ISP_ROUTER_IP};
        }
      }
    metrics:
      enabled: true
      containerPorts:
        metrics: 9113
      service:
        port: 9113
        serviceMonitor:
          enabled: true
    extraDeploy:
      - apiVersion: cert-manager.io/v1
        metadata:
          name: tls-cert-isp.${EXTERNAL_DOMAIN}
          labels:
            kustomize.toolkit.fluxcd.io/prune: disabled
        kind: Certificate
        spec:
          secretName: tls-cert-isp.${EXTERNAL_DOMAIN}
          issuerRef:
            name: letsencrypt-prod-${EXTERNAL_DOMAIN}
            kind: ClusterIssuer
          dnsNames: ['isp.${EXTERNAL_DOMAIN}']
      - kind: IngressRoute
        metadata:
          name: *n
        apiVersion: traefik.io/v1alpha1
        spec:
          routes:
            - match: Host(`isp.${EXTERNAL_DOMAIN}`)
              kind: Rule
              services:
                - name: *n
                  port: 443
                  serversTransport: ingress-insecure@kubernetescrd
              middlewares:
                - name: authelia-authz
                  namespace: authelia
                - name: compress
                  namespace: ingress
          tls:
            secretName: tls-cert-isp.${EXTERNAL_DOMAIN}
            domains:
              - main: isp.${EXTERNAL_DOMAIN}
