---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: viewtube-db
spec:
  chart:
    spec:
      chart: mongodb
      version: 15.6.6
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  values:
    architecture: standalone
    auth:
      enabled: true
      ## @param auth.existingSecret Existing secret with MongoDB(&reg;) credentials (keys: `mongodb-passwords`, `mongodb-root-password`, `mongodb-metrics-password`, `mongodb-replica-set-key`)
      existingSecret: viewtube-db-secrets
      rootUser: root
      usernames: [viewtube]
      databases: [viewtube]
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop: [ALL]
    podSecurityContext:
      enabled: true
      fsGroupChangePolicy: Always
      fsGroup: 1001
    containerSecurityContext:
      enabled: true
      seLinuxOptions: {}
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop: [ALL]
      seccompProfile:
        type: RuntimeDefault
    networkPolicy:
      enabled: false
    persistence:
      enabled: true
      accessModes: [ReadWriteOnce]
      size: 10Gi
      annotations:
        k8up.io/backup: 'false'
    backup:
      enabled: true
      cronjob:
        schedule: '@daily'
        concurrencyPolicy: Allow
        containerSecurityContext:
          enabled: true
          runAsUser: 1001
          runAsGroup: 1001
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ALL]
          seccompProfile:
            type: RuntimeDefault
        storage:
          size: 10Gi
          annotations:
            k8up.io/backup: 'true'
          mountPath: /backup/mongodb
    metrics:
      enabled: true
      collector:
        all: true
      service:
        annotations:
          prometheus.io/scrape: 'true'
          prometheus.io/port: '{{ .Values.metrics.service.ports.metrics }}'
          prometheus.io/path: /metrics
        ports:
          metrics: 9216
      serviceMonitor:
        enabled: true
      prometheusRule:
        enabled: true
